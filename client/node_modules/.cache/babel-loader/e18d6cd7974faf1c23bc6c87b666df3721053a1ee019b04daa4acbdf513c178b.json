{"ast":null,"code":"var _jsxFileName = \"/Users/Victoria/bootcamp/book-search-engine/client/src/pages/SavedBooks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\nimport { Container, Card, Button, Row, Col } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SavedBooks = () => {\n  _s();\n  // QUERY AND MUTATION\n  const {\n    loading,\n    data\n  } = useQuery(GET_ME);\n  const userData = (data === null || data === void 0 ? void 0 : data._id) || {};\n  const removeBook = useMutation(REMOVE_BOOK);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  // const handleDeleteBook = async (bookId) => {\n  //   const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //   if (!token) {\n  //     return false;\n  //   }\n\n  //   try {\n  //     const response = await deleteBook(bookId, token);\n\n  //     if (!response.ok) {\n  //       throw new Error('something went wrong!');\n  //     }\n\n  //     const updatedUser = await response.json();\n  //     setUserData(updatedUser);\n  //     // upon success, remove book's id from localStorage\n  //     removeBookId(bookId);\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      fluid: true,\n      className: \"text-light bg-dark p-5\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved books!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pt-5\",\n        children: userData.savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:` : 'You have no saved books!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: userData.savedBooks.map(book => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"dark\",\n              children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: book.image,\n                alt: `The cover for ${book.title}`,\n                variant: \"top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: book.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"small\",\n                  children: [\"Authors: \", book.authors]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: book.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-block btn-danger\",\n                  onClick: () => handleDeleteBook(book.bookId),\n                  children: \"Delete this Book!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)]\n            }, book.bookId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SavedBooks, \"Rbib/gvDEk8kWJVF03lQiywDaRQ=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = SavedBooks;\nexport default SavedBooks;\nvar _c;\n$RefreshReg$(_c, \"SavedBooks\");","map":{"version":3,"names":["React","useState","useQuery","useMutation","GET_ME","REMOVE_BOOK","Container","Card","Button","Row","Col","Auth","removeBookId","jsxDEV","_jsxDEV","Fragment","_Fragment","SavedBooks","_s","loading","data","userData","_id","removeBook","userDataLength","children","fileName","_jsxFileName","lineNumber","columnNumber","fluid","className","savedBooks","length","map","book","md","border","image","Img","src","alt","title","variant","Body","Title","authors","Text","description","onClick","handleDeleteBook","bookId","_c","$RefreshReg$"],"sources":["/Users/Victoria/bootcamp/book-search-engine/client/src/pages/SavedBooks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\nimport {\n  Container,\n  Card,\n  Button,\n  Row,\n  Col\n} from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  // QUERY AND MUTATION\n  const { loading, data } = useQuery ( GET_ME);\n  const userData = data?._id || {};\n  const removeBook = useMutation(REMOVE_BOOK)\n\n\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  // const handleDeleteBook = async (bookId) => {\n  //   const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //   if (!token) {\n  //     return false;\n  //   }\n\n  //   try {\n  //     const response = await deleteBook(bookId, token);\n\n  //     if (!response.ok) {\n  //       throw new Error('something went wrong!');\n  //     }\n\n  //     const updatedUser = await response.json();\n  //     setUserData(updatedUser);\n  //     // upon success, remove book's id from localStorage\n  //     removeBookId(bookId);\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <div fluid className=\"text-light bg-dark p-5\">\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </div>\n      <Container>\n        <h2 className='pt-5'>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <Row>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Col md=\"4\">\n                <Card key={book.bookId} border='dark'>\n                  {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                  <Card.Body>\n                    <Card.Title>{book.title}</Card.Title>\n                    <p className='small'>Authors: {book.authors}</p>\n                    <Card.Text>{book.description}</Card.Text>\n                    <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                      Delete this Book!\n                    </Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}